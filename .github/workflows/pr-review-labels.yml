name: Label PR review outcome

on:
  pull_request_review:
    types: [submitted]

jobs:
  update-labels:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Update label based on review state
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reviewState = context.payload.review.state.toLowerCase();
            const pr = context.payload.pull_request;
            const repo = context.repo;

            const labelMap = {
              approved: { add: 'approved', remove: ['changes-requested', 'needs-review'] },
              changes_requested: { add: 'changes-requested', remove: ['approved', 'needs-review'] },
              commented: { add: 'needs-review', remove: ['approved', 'changes-requested'] },
              pending: { add: 'needs-review', remove: ['approved', 'changes-requested'] },
              dismissed: { add: null, remove: ['approved', 'changes-requested', 'needs-review'] }
            };

            const action = labelMap[reviewState];
            if (!action) return;

            const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: pr.number
            });

            const current = currentLabels.map(l => l.name);

            // Remove labels that are present and need removal
            for (const label of action.remove) {
              if (current.includes(label)) {
                await github.rest.issues.removeLabel({
                  owner: repo.owner,
                  repo: repo.repo,
                  issue_number: pr.number,
                  name: label
                });
              }
            }

            // Add new label only if it's not already there
            if (action.add && !current.includes(action.add)) {
              await github.rest.issues.addLabels({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: pr.number,
                labels: [action.add]
              });
            }
